#!/usr/bin/env ruby -wU

# ******************************************************************************
#
# CONFIGURATION OPTIONS
#
# ******************************************************************************

CONFIG_KEYS = [:AFTER, :BEFORE].freeze

AFTER = ENV.fetch('AFTER', '12am')
BEFORE = ENV.fetch('BEFORE', 'tomorrow')

# ******************************************************************************
#
# HELP OPTIONS
#
# ******************************************************************************

if ARGV.grep(/-h/i).size == 1
  $stdout.puts ""
  $stdout.puts "$ ./script/#{File.basename(__FILE__)}"
  $stdout.puts ""
  $stdout.puts "This script will generate stats regarding team progress."
  $stdout.puts ""
  $stdout.puts ""
  $stdout.puts "Current Configuration:"
  CONFIG_KEYS.each do |key|
    $stdout.puts "\t#{key}='#{Object.const_get(key)}'"
  end
  $stdout.puts ""
  $stdout.puts "You can override the configuration option by adding the corresponding"
  $stdout.puts "ENV variable."
  exit(0)
end

# Find the range of sha's, I'm choosing reverse so the .first and .last make
# more logical sense.
sha_range = `git log --pretty=format:"%H" --after=#{AFTER} --before=#{BEFORE} --reverse`
commit_count_for_range = sha_range.split("\n").count
beginning_sha_for_range = sha_range.split("\n").first
sha_for_commit_just_prior_to_range = `git rev-parse #{beginning_sha_for_range}~`.strip
ending_sha_for_range = sha_range.split("\n").last

# ShortStat
short_stat = `git diff --shortstat #{sha_for_commit_just_prior_to_range}..#{ending_sha_for_range}`

lines = []

lines << "SHA Range:\t#{sha_for_commit_just_prior_to_range}..#{ending_sha_for_range}"
lines << "Commits:\t#{commit_count_for_range}"
lines << "Changes:\t#{short_stat.strip}"
match = /^ (?<doc_percentage>\d{1,3}(\.\d+%)) *documented$/i.match(`yard`)
lines << "Documented:\t#{match[:doc_percentage]}" if match
lines << "Github URL:\thttps://github.com/ndlib/sipity/compare/#{sha_for_commit_just_prior_to_range}...#{ending_sha_for_range}"

puts lines.join("\n")
